{"ast":null,"code":"var _jsxFileName = \"/Users/kimle/Documents/cal-poly-fullstack/course_work/final/infinite-loop/src/components/App.js\";\n// was already in the file\n// import React, { useState, useEffect } from 'react';\n// // getAPIHealth is defined in our axios-services directory index.js\n// // you can think of that directory as a collection of api adapters\n// // where each adapter fetches specific info from our express server's /api route\n// import { getAPIHealth } from '../axios-services';\n// import '../style/App.css';\n// what I added\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport useAuth from \"../hooks/useAuth\"; // react components\n\nimport Home from \"./Home\";\n\nconst App = () => {\n  // was already in the file\n  // const [APIHealth, setAPIHealth] = useState('');\n  // useEffect(() => {\n  //   // follow this pattern inside your useEffect calls:\n  //   // first, create an async function that will wrap your axios service adapter\n  //   // invoke the adapter, await the response, and set the data\n  //   const getAPIStatus = async () => {\n  //     const { healthy } = await getAPIHealth();\n  //     setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n  //   };\n  //   // second, after you've defined your getter above\n  //   // invoke it immediately after its declaration, inside the useEffect callback\n  //   getAPIStatus();\n  // }, []);\n  const {\n    setAuth\n  } = useAuth();\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setAuth({\n        user: localStorage.getItem(\"user\"),\n        token: localStorage.getItem(\"token\")\n      });\n    }\n  }, []);\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, \"loading\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // was already in the file\n    // <div className=\"app-container\">\n    //   <h1>Hello, World!</h1>\n    //   <p>API Status: {APIHealth}</p>\n    // </div>\n    React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/React.createElement(Home, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kimle/Documents/cal-poly-fullstack/course_work/final/infinite-loop/src/components/App.js"],"names":["React","Routes","Route","useEffect","useAuth","Home","App","setAuth","localStorage","getItem","user","token","status"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,OAAO,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCF,MAAAA,OAAO,CAAC;AACNG,QAAAA,IAAI,EAAEF,YAAY,CAACC,OAAb,CAAqB,MAArB,CADA;AAENE,QAAAA,KAAK,EAAEH,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFD,OAAD,CAAP;AAID;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIG,MAAM,KAAK,SAAf,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AANF;AAYD,CA7CD;;AA+CA,eAAeN,GAAf","sourcesContent":["// was already in the file\n// import React, { useState, useEffect } from 'react';\n// // getAPIHealth is defined in our axios-services directory index.js\n// // you can think of that directory as a collection of api adapters\n// // where each adapter fetches specific info from our express server's /api route\n// import { getAPIHealth } from '../axios-services';\n// import '../style/App.css';\n\n// what I added\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport useAuth from \"../hooks/useAuth\";\n\n// react components\nimport Home from \"./Home\";\n\nconst App = () => {\n  // was already in the file\n  // const [APIHealth, setAPIHealth] = useState('');\n\n  // useEffect(() => {\n  //   // follow this pattern inside your useEffect calls:\n  //   // first, create an async function that will wrap your axios service adapter\n  //   // invoke the adapter, await the response, and set the data\n  //   const getAPIStatus = async () => {\n  //     const { healthy } = await getAPIHealth();\n  //     setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n  //   };\n\n  //   // second, after you've defined your getter above\n  //   // invoke it immediately after its declaration, inside the useEffect callback\n  //   getAPIStatus();\n  // }, []);\n\n  const { setAuth } = useAuth();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setAuth({\n        user: localStorage.getItem(\"user\"),\n        token: localStorage.getItem(\"token\"),\n      });\n    }\n  }, []);\n\n  if (status === \"loading\") {\n    return <div>loading</div>;\n  }\n\n  return (\n    // was already in the file\n    // <div className=\"app-container\">\n    //   <h1>Hello, World!</h1>\n    //   <p>API Status: {APIHealth}</p>\n    // </div>\n    <div className='App'>\n      <Routes>\n        <Route path='/' element={<Home />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}