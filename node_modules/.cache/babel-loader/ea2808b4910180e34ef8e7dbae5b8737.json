{"ast":null,"code":"var _jsxFileName = \"/Users/kimle/Documents/cal-poly-fullstack/course_work/final/infinite-loop/src/components/App.js\";\n// was already in the file\n// import React, { useState, useEffect } from 'react';\n// // getAPIHealth is defined in our axios-services directory index.js\n// // you can think of that directory as a collection of api adapters\n// // where each adapter fetches specific info from our express server's /api route\n// import { getAPIHealth } from '../axios-services';\n// import '../style/App.css';\n// what I added\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; // React components\n\nimport Home from \"./Home\";\n\nconst App = () => {\n  // was already in the file\n  // const [APIHealth, setAPIHealth] = useState('');\n  // useEffect(() => {\n  //   // follow this pattern inside your useEffect calls:\n  //   // first, create an async function that will wrap your axios service adapter\n  //   // invoke the adapter, await the response, and set the data\n  //   const getAPIStatus = async () => {\n  //     const { healthy } = await getAPIHealth();\n  //     setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n  //   };\n  //   // second, after you've defined your getter above\n  //   // invoke it immediately after its declaration, inside the useEffect callback\n  //   getAPIStatus();\n  // }, []);\n  return (\n    /*#__PURE__*/\n    // was already in the file\n    // <div className=\"app-container\">\n    //   <h1>Hello, World!</h1>\n    //   <p>API Status: {APIHealth}</p>\n    // </div>\n    React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/React.createElement(Home, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kimle/Documents/cal-poly-fullstack/course_work/final/infinite-loop/src/components/App.js"],"names":["React","ReactDOM","Home","App"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AANF;AAYD,CA9BD;;AAgCA,eAAeA,GAAf","sourcesContent":["// was already in the file\n// import React, { useState, useEffect } from 'react';\n// // getAPIHealth is defined in our axios-services directory index.js\n// // you can think of that directory as a collection of api adapters\n// // where each adapter fetches specific info from our express server's /api route\n// import { getAPIHealth } from '../axios-services';\n// import '../style/App.css';\n\n// what I added\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// React components\nimport Home from \"./Home\";\n\nconst App = () => {\n  // was already in the file\n  // const [APIHealth, setAPIHealth] = useState('');\n\n  // useEffect(() => {\n  //   // follow this pattern inside your useEffect calls:\n  //   // first, create an async function that will wrap your axios service adapter\n  //   // invoke the adapter, await the response, and set the data\n  //   const getAPIStatus = async () => {\n  //     const { healthy } = await getAPIHealth();\n  //     setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n  //   };\n\n  //   // second, after you've defined your getter above\n  //   // invoke it immediately after its declaration, inside the useEffect callback\n  //   getAPIStatus();\n  // }, []);\n\n  return (\n    // was already in the file\n    // <div className=\"app-container\">\n    //   <h1>Hello, World!</h1>\n    //   <p>API Status: {APIHealth}</p>\n    // </div>\n    <div className='App'>\n      <Routes>\n        <Route path='/' element={<Home />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}