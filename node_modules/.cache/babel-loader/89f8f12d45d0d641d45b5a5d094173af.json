{"ast":null,"code":"var _jsxFileName = \"/Users/kimle/Documents/cal-poly-fullstack/course_work/final/infinite-loop/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Navigation from \"./Navigation\";\nimport step1 from \"./img/step1.png\";\nimport step2 from \"./img/step2.png\";\nimport step3 from \"./img/step3.png\"; // getAPIHealth is defined in our axios-services directory index.js\n// you can think of that directory as a collection of api adapters\n// where each adapter fetches specific info from our express server's /api route\n\nimport { getAPIHealth } from \"../axios-services\";\n\nconst App = () => {\n  const [APIHealth, setAPIHealth] = useState(\"\");\n  useEffect(() => {\n    // follow this pattern inside your useEffect calls:\n    // first, create an async function that will wrap your axios service adapter\n    // invoke the adapter, await the response, and set the data\n    const getAPIStatus = async () => {\n      const {\n        healthy\n      } = await getAPIHealth();\n      setAPIHealth(healthy ? \"api is up! :D\" : \"api is down :/\");\n    }; // second, after you've defined your getter above\n    // invoke it immediately after its declaration, inside the useEffect callback\n\n\n    getAPIStatus();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kimle/Documents/cal-poly-fullstack/course_work/final/infinite-loop/src/components/App.js"],"names":["React","useState","useEffect","Routes","Route","Home","Navigation","step1","step2","step3","getAPIHealth","App","APIHealth","setAPIHealth","getAPIStatus","healthy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;AACA;AACA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA,UAAMY,YAAY,GAAG,YAAY;AAC/B,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAML,YAAY,EAAtC;AACAG,MAAAA,YAAY,CAACE,OAAO,GAAG,eAAH,GAAqB,gBAA7B,CAAZ;AACD,KAHD,CAJc,CASd;AACA;;;AACAD,IAAAA,YAAY;AACb,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAtBD;;AAwBA,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Navigation from \"./Navigation\";\n\nimport step1 from \"./img/step1.png\";\nimport step2 from \"./img/step2.png\";\nimport step3 from \"./img/step3.png\";\n// getAPIHealth is defined in our axios-services directory index.js\n// you can think of that directory as a collection of api adapters\n// where each adapter fetches specific info from our express server's /api route\nimport { getAPIHealth } from \"../axios-services\";\n\nconst App = () => {\n  const [APIHealth, setAPIHealth] = useState(\"\");\n\n  useEffect(() => {\n    // follow this pattern inside your useEffect calls:\n    // first, create an async function that will wrap your axios service adapter\n    // invoke the adapter, await the response, and set the data\n    const getAPIStatus = async () => {\n      const { healthy } = await getAPIHealth();\n      setAPIHealth(healthy ? \"api is up! :D\" : \"api is down :/\");\n    };\n\n    // second, after you've defined your getter above\n    // invoke it immediately after its declaration, inside the useEffect callback\n    getAPIStatus();\n  }, []);\n\n  return (\n    <div className='app-container'>\n      <Home />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}